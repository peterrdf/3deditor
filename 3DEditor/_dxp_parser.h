#pragma once


#include <algorithm> 
#include <functional> 
#include <cctype>
#include <locale>

#include <iostream>
#include <fstream>

#include <vector>
#include <string>
#include <map>
#include <set>

using namespace std;

namespace _dxf
{
	// --------------------------------------------------------------------------------------------
	class _parser;

	// --------------------------------------------------------------------------------------------
	// _error	
	class _error : public runtime_error
	{

	public: // Members		

		// ----------------------------------------------------------------------------------------
		static const string file_not_found;
		static const string invalid_argument;
		static const string sof;
		static const string eof;
		static const string invalid_format;		

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_error(const string& error);
	};
	// _error
	// --------------------------------------------------------------------------------------------	

	// --------------------------------------------------------------------------------------------
	// _reader	
	class _reader
	{

	private: // Members

		// ----------------------------------------------------------------------------------------
		// .dxf file
		ifstream& m_dxfFile;

		// ----------------------------------------------------------------------------------------
		// all rows
		vector<string> m_vecRows;

		// ----------------------------------------------------------------------------------------
		// current row
		size_t m_iRow;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_reader(ifstream&);

		// ----------------------------------------------------------------------------------------
		virtual ~_reader();		

		// ----------------------------------------------------------------------------------------
		void load();

		// ----------------------------------------------------------------------------------------
		const vector<string>& rows() const;

		// ----------------------------------------------------------------------------------------
		size_t rowIndex() const;

		// ----------------------------------------------------------------------------------------
		const string& row();

		// ----------------------------------------------------------------------------------------
		const string& forth();

		// ----------------------------------------------------------------------------------------
		const string& back();
	};
	// _reader
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _group_codes	
	class _group_codes
	{

	public: // Members

		// ----------------------------------------------------------------------------------------
		static const string start;
		static const string name;
		static const string eof;
		static const string section;
		static const string endsec;

		// ----------------------------------------------------------------------------------------
		static const string entities;
		static const string header;
		static const string tables;
		static const string blocks;
		static const string line;
		static const string vertex;		
		static const string polyline;
		static const string lwpolyline;
		static const string seqend;
		static const string circle;
		static const string block;
		static const string endblock;
		static const string insert;

		// ----------------------------------------------------------------------------------------
		static const string subclass;
		static const string layer;
		static const string x;
		static const string y;
		static const string z;
		static const string x2;
		static const string y2;
		static const string z2;
		static const string radius;
		static const string extrusion_x;
		static const string extrusion_y;
		static const string extrusion_z;
	};
	// _group_codes
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _group
	class _group
	{

	private: // Members

		// ----------------------------------------------------------------------------------------
		string m_strType;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_group(const string& strType);

		// ----------------------------------------------------------------------------------------
		virtual ~_group();

		// ----------------------------------------------------------------------------------------
		const string& type() const;
	};
	// _group
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _entity
	class _entity : public _group
	{

	protected: //  Members

		// ----------------------------------------------------------------------------------------
		map<string, string> m_mapCode2Value;

		// ----------------------------------------------------------------------------------------
		set<string> m_setMultiValueCodes;

		// ----------------------------------------------------------------------------------------
		vector<_entity*> m_vecEntities;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_entity(const string& strName);

		// ----------------------------------------------------------------------------------------
		virtual ~_entity();		

		// ----------------------------------------------------------------------------------------
		virtual void load(_reader& reader);

		// ----------------------------------------------------------------------------------------
		const string& value(const string& strCode);

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser) = 0;
	};
	// _entity
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _line
	// --------------------------------------------------------------------------------------------
	class _line : public _entity
	{

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_line();

		// ----------------------------------------------------------------------------------------
		virtual ~_line();

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser);
	};
	// _line
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _lwpolyline
	// --------------------------------------------------------------------------------------------
	class _lwpolyline : public _entity
	{

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_lwpolyline();

		// ----------------------------------------------------------------------------------------
		virtual ~_lwpolyline();

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser);
	};
	// _lwpolyline
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _vertex
	// --------------------------------------------------------------------------------------------
	class _vertex : public _entity
	{

	public: // Members

		// ----------------------------------------------------------------------------------------
		static const string polyface_mesh_vertex1;
		static const string polyface_mesh_vertex2;
		static const string polyface_mesh_vertex3;
		static const string polyface_mesh_vertex4;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_vertex();

		// ----------------------------------------------------------------------------------------
		virtual ~_vertex();

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser);
	};
	// _vertex
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _circle
	// --------------------------------------------------------------------------------------------
	class _circle : public _entity
	{

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_circle();

		// ----------------------------------------------------------------------------------------
		virtual ~_circle();

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser);
	};
	// _circle
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _seqend
	// --------------------------------------------------------------------------------------------
	class _seqend : public _entity
	{

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_seqend();

		// ----------------------------------------------------------------------------------------
		virtual ~_seqend();

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser);
	};
	// _seqend
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _polyline
	// --------------------------------------------------------------------------------------------
	class _polyline : public _entity
	{

	private: // Members

		// ----------------------------------------------------------------------------------------
		static const string flag;
		static const string m;
		static const string n;

		// ----------------------------------------------------------------------------------------
		vector<_vertex*> m_vecVertices;

		// ----------------------------------------------------------------------------------------
		_seqend* m_pSeqend;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_polyline();

		// ----------------------------------------------------------------------------------------
		virtual ~_polyline();

		// ----------------------------------------------------------------------------------------
		virtual void load(_reader& reader);

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser);
	};
	// _polyline
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _endblk
	class _endblk : public _entity
	{

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_endblk();

		// ----------------------------------------------------------------------------------------
		virtual ~_endblk();

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser);
	};
	// _endblk
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _block
	class _block : public _entity
	{

	private: // Members

		// ----------------------------------------------------------------------------------------
		_endblk* m_pEndblk;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_block();

		// ----------------------------------------------------------------------------------------
		virtual ~_block();

		// ----------------------------------------------------------------------------------------
		virtual void load(_reader& reader);

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser);
	};
	// _block
	// --------------------------------------------------------------------------------------------	

	// --------------------------------------------------------------------------------------------
	// _insert
	class _insert : public _entity
	{

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_insert();

		// ----------------------------------------------------------------------------------------
		virtual ~_insert();

		// ----------------------------------------------------------------------------------------
		virtual int64_t createInstance(_parser* pParser);
	};
	// _insert
	// --------------------------------------------------------------------------------------------	

	// --------------------------------------------------------------------------------------------
	// _section
	class _section : public _group
	{

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_section(const string& strName);

		// ----------------------------------------------------------------------------------------
		virtual ~_section();
	};
	// _section
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _entities_section
	class _entities_section : public _section
	{

	private: // Members

		// ----------------------------------------------------------------------------------------
		vector<_entity*> m_vecEntities;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_entities_section();

		// ----------------------------------------------------------------------------------------
		virtual ~_entities_section();

		// ----------------------------------------------------------------------------------------
		const vector<_entity*>& entities() const;

		// ----------------------------------------------------------------------------------------
		void load(_reader& reader);		
	};
	// _entities_section
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _header_section
	class _header_section : public _section
	{

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_header_section();

		// ----------------------------------------------------------------------------------------
		virtual ~_header_section();

		// ----------------------------------------------------------------------------------------
		void load(_reader& reader);
	};
	// _header_section
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _tables_section
	class _tables_section : public _section
	{

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_tables_section();

		// ----------------------------------------------------------------------------------------
		virtual ~_tables_section();

		// ----------------------------------------------------------------------------------------
		void load(_reader& reader);
	};
	// _tables_section
	// --------------------------------------------------------------------------------------------	

	// --------------------------------------------------------------------------------------------
	// _blocks_section
	class _blocks_section : public _section
	{

	private: // Members

		// ----------------------------------------------------------------------------------------
		vector<_block*> m_vecBlocks;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_blocks_section();

		// ----------------------------------------------------------------------------------------
		virtual ~_blocks_section();

		// ----------------------------------------------------------------------------------------
		const vector<_block*>& blocks();

		// ----------------------------------------------------------------------------------------
		void load(_reader& reader);
	};
	// _blocks_section
	// --------------------------------------------------------------------------------------------	

	// --------------------------------------------------------------------------------------------
	// _parser
	class _parser
	{

	private: // Members

		// ----------------------------------------------------------------------------------------
		int64_t m_iModel;

		// ----------------------------------------------------------------------------------------
		vector<_section*> m_vecSections;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_parser(int64_t iModel);

		// ----------------------------------------------------------------------------------------
		virtual ~_parser();

		// ----------------------------------------------------------------------------------------
		int64_t getModel() const;

		// ----------------------------------------------------------------------------------------
		void load(const wchar_t* szFile);

		// ----------------------------------------------------------------------------------------
		_block* findBlockByName(const string& strBlockName);

	private: // Methods

		// ----------------------------------------------------------------------------------------
		void createInstances();
	};
	// _parser
	// --------------------------------------------------------------------------------------------
};

