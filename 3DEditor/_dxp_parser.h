#pragma once


#include <algorithm> 
#include <functional> 
#include <cctype>
#include <locale>

#include <iostream>
#include <fstream>

#include <vector>
#include <string>

using namespace std;

namespace _dxf
{
	// --------------------------------------------------------------------------------------------
	// _exception
	// --------------------------------------------------------------------------------------------
	class _exception : public runtime_error
	{
	public: // Methods
		_exception(const string& error);
	};
	// _exception
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _group_codes
	// --------------------------------------------------------------------------------------------
	class _group_codes
	{
	public: // Members

		// 0 Text string indicating the entity type (fixed)
		static const string start;
		// 2 Name (attribute tag, block name, and so on)
		static const string name;
		static const string eof;
		static const string section;
		static const string endsec;
		static const string entities;
		static const string line;
	};
	// _group_codes
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _reader	
	// --------------------------------------------------------------------------------------------
	class _reader
	{
	private: // Members

		// ----------------------------------------------------------------------------------------
		// .dxf file
		ifstream& m_dxfFile;

		// ----------------------------------------------------------------------------------------
		// all rows
		vector<string> m_vecRows;

		// ----------------------------------------------------------------------------------------
		// current row
		size_t m_iRow;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_reader(ifstream&);

		// ----------------------------------------------------------------------------------------
		virtual ~_reader();

		// ----------------------------------------------------------------------------------------
		const string& row();

		// ----------------------------------------------------------------------------------------
		bool read();

		// ----------------------------------------------------------------------------------------
		void back();
	};
	// _reader
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _group
	// --------------------------------------------------------------------------------------------
	class _group
	{

	private: // Members

		// ----------------------------------------------------------------------------------------
		string m_strName;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_group(const string& strName);

		// ----------------------------------------------------------------------------------------
		virtual ~_group();

		// ----------------------------------------------------------------------------------------
		const string& name() const;
	};
	// _group
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _section
	// --------------------------------------------------------------------------------------------
	class _section : public _group
	{
	private:

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_section(const string& strName);

		// ----------------------------------------------------------------------------------------
		virtual ~_section();
	};
	// _section
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _entities_section
	// --------------------------------------------------------------------------------------------
	class _entities_section : public _section
	{
	private: // Members

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_entities_section();

		// ----------------------------------------------------------------------------------------
		virtual ~_entities_section();

		// ----------------------------------------------------------------------------------------
		void load(_reader& dxfReader);
	};
	// _entities_section
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _entity
	// --------------------------------------------------------------------------------------------
	class _entity : public _group
	{
	private: // Members

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_entity(const string& strName);

		// ----------------------------------------------------------------------------------------
		virtual ~_entity();
	};
	// _entity
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _line
	// --------------------------------------------------------------------------------------------
	class _line : public _entity
	{
	private: // Members

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_line();

		// ----------------------------------------------------------------------------------------
		virtual ~_line();
	};
	// _line
	// --------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------
	// _parser
	// --------------------------------------------------------------------------------------------
	class _parser
	{
	private: // Members

		// ----------------------------------------------------------------------------------------
		int64_t m_iModel;

		// ----------------------------------------------------------------------------------------
		vector<_section*> m_vecSections;

	public: // Methods

		// ----------------------------------------------------------------------------------------
		_parser(int64_t iModel);

		// ----------------------------------------------------------------------------------------
		virtual ~_parser();

		// ----------------------------------------------------------------------------------------
		void load(const wchar_t* szFile);
	};
	// _parser
	// --------------------------------------------------------------------------------------------
};

